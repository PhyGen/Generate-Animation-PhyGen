from fastapi import FastAPI, UploadFile, File
from fastapi.responses import FileResponse, JSONResponse
from fastapi.middleware.cors import CORSMiddleware
import os
import uuid

from app.services.ocr import extract_text_from_image
from app.services.ai_generator import generate_manim_code
from app.services.manim_renderer import render_manim_code

app = FastAPI()

# Cho ph√©p CORS n·∫øu b·∫°n c√≥ frontend ri√™ng
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # C√≥ th·ªÉ thay "*" b·∫±ng domain frontend b·∫°n
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

@app.post("/solve-physics-problem/")
async def solve_physics_problem(file: UploadFile = File(...)):
    try:
        # 1. L∆∞u ·∫£nh t·∫°m
        image_id = str(uuid.uuid4())
        image_path = f"temp/{image_id}_{file.filename}"
        os.makedirs("temp", exist_ok=True)
        with open(image_path, "wb") as buffer:
            buffer.write(await file.read())
        print("‚úÖ ƒê√£ ƒë·ªçc ·∫£nh upload")

        # 2. OCR ‚Üí ƒë·ªÅ b√†i + latex
        extracted = extract_text_from_image(image_path)
        print("üìù K·∫øt qu·∫£ OCR:", extracted)
        question_text = extracted["text"]
        latex = extracted["latex"]

        # ‚úÖ 3. Gh√©p prompt v√† latex l·∫°i
        full_prompt = f"{question_text}\n\nC√¥ng th·ª©c LaTeX:\n{latex}"

        # 4. AI sinh m√£ Manim
        manim_code = generate_manim_code(full_prompt)
        print("üß† M√£ Manim AI sinh ra:", manim_code)

        # 5. Render video
        video_path = render_manim_code(manim_code)
        print("üé¨ Video ƒë√£ render:", video_path)

        # 6. Tr·∫£ v·ªÅ file video lu√¥n
        return FileResponse(
            path=video_path,
            media_type="video/mp4",
            filename=os.path.basename(video_path)
        )

    except Exception as e:
        print("‚ùå L·ªói x·∫£y ra:", e)
        return JSONResponse(status_code=500, content={"error": str(e)})
